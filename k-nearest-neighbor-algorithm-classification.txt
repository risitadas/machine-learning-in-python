K-Nearest Neighbor(KNN) Algorithm for Machine Learning :


I. what is knn algorithm? 

one of the simplest Machine Learning algorithms based on Supervised Learning technique

it assumes the similarity between the new case/data and available cases and put the new case into the category that is most similar to the available categories,
also it stores all the available data and classifies a new data point based on the similarity, this means when new data appears 
then it can be easily classified into a well suite category by using K- NN algorithm

knn algorithm can be used for Regression as well as for Classification but mostly it is used for the Classification problems

it is a non-parametric algorithm, which means it does not make any assumption on underlying data,
also called a lazy learner algorithm because it does not learn from the training set immediately instead 
it stores the dataset and at the time of classification, it performs an action on the dataset

knn algorithm at the training phase just stores the dataset and when it gets new data, then it classifies that data into a category that is much similar to the new data




II. how does it work?

Step-1: select the number K of the neighbors
Step-2: calculate the Euclidean distance of K number of neighbors
Step-3: take the K nearest neighbors as per the calculated Euclidean distance
Step-4: among these k neighbors, count the number of the data points in each category
Step-5: assign the new data points to that category for which the number of the neighbor is maximum
Step-6: our model is ready



III. how to select the value of k ?

1. the most preferred value for K is 5.
2. a very low value for K such as K=1 or K=2, can be noisy and lead to the effects of outliers in the model
3. large values for K are good, but it may find some difficulties



IV. advantages ?

simple to implement
robust to the noisy training data
more effective if the training data is large



V. disadvantages ?

always needs to determine the value of k which may be complex some time
computation cost is high because of calculating the distance between the data points for traininf samples



VI. python implementation of the knn algorithm ?

1. data pre=processing step
2. fitting the knn algorithm to the training set
3. predicting the test result
4. test accuracy of the result(creation of confusion matrix)
5. visualizing the test set result